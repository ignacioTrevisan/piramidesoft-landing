// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           String   @id @default(uuid())
  titulo       String
  descripcion  String
  precioAntes  Decimal?
  precioAhora  Decimal
  imagenes     String[]
  video        String
  modulos      Modulo[]  // Relación uno a muchos
  url_demo     String?
  url_full     String?
  tipoId       String
  tipo         Tipo      @relation(fields: [tipoId], references: [id])
  visible      Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Modulo {
  id         String   @id @default(uuid())
  titulo     String   
  subtitulos String[] 
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
}

model Tipo {
  id        String     @id @default(uuid())
  titulo    String
  productos Product[]  // <- relación inversa
}


enum Role {
  admin
  user
}


model User{
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  role        Role         @default(user)
}

model Consultas {
  id          String      @id @default(uuid())
  descripcion String
  email       String
  numero      String
  createdAt   DateTime    @default(now())
}

model Blog {
  id          String   @id @default(uuid())
  titulo      String
  contenido   String
  resumen     String
  imagen      String
  visible     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Stats {
  mes                  String     @id @unique
  userViews            UserView[]
  cantidadDeProductos  Int
  cantidadDeBlogs      Int
}

model UserView {
  id        String @id @default(uuid())
  ip        String
  statsMes  String
  stats     Stats  @relation(fields: [statsMes], references: [mes])
}
